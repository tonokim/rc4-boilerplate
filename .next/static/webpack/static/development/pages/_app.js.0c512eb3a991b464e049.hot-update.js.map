{"version":3,"file":"static/webpack/static/development/pages/_app.js.0c512eb3a991b464e049.hot-update.js","sources":["webpack:///./stores/index.js"],"sourcesContent":["import { types, applySnapshot } from 'mobx-state-tree'\nimport { User } from './user'\nimport { App } from './app'\n\nlet store = null\n\nconst Store = types\n  .model(\"Store\",{\n    user: types.optional(User),\n    app: types.optional(App, {\n      name: 'testapp'\n    }),\n  })\n  .actions(self => {\n    let timer\n    function start () {\n      timer = setInterval(() => {\n        // mobx-state-tree doesn't allow anonymous callbacks changing data\n        // pass off to another action instead\n        self.update()\n      }, 1000)\n    }\n\n    function update () {\n      self.lastUpdate = Date.now()\n      self.light = false\n    }\n\n    function stop () {\n      clearInterval(timer)\n    }\n\n    return { start, stop, update }\n  })\n\nexport function initializeStore (isServer, snapshot = null) {\n  if (isServer) {\n    store = Store.create({user: { lastUpdate: Date.now() } })\n  }\n  if (store === null) {\n    store = Store.create({user: { lastUpdate: Date.now() } })\n  }\n  if (snapshot) {\n    applySnapshot(store, snapshot)\n  }\n  return store\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AAEA;AAEA;AAEA;AACA;AACA;AADA;AAFA;AAOA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;;;;A","sourceRoot":""}